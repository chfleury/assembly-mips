.data
    zeroFloat: .float 0.00000000
    fimLinha: .asciiz "\n"
    mais: .asciiz "+"
    menos: .asciiz "-"
    mascara: .word 8388607
    hexresult:  .space  8
.text
	main:

	li $v0, 6  # código do sitema para leitura de float
	syscall # lendo o numero (o valor estara em $f0)

    mfc1 $t8 $f0 #store in $t8
    lwc1 $f1, zeroFloat
    add.s $f12, $f0, $f1

	li $v0, 2 #codigo do sistema para printar float
	syscall # printando float


	li $v0, 4  # código do sitema para printar a string
	la $a0, fimLinha #endereço da string a imprimir no registrador $a
	syscall # printando

    #---------------------------------------------------------------------
    # pegando o bit de sinal
    addi  $t0 $zero 1 # adicionando 1 em t0 ( 0000 ... 0001)
    sll  $t0 $t0 31 # shiftando 31 bits pra esquerda ( 1000 ... 0000)
    and  $a0 $t0 $t8 # fazendo AND logico para obter apenas o bit de sinal de acordo com nossa mascara acima
    srl  $a0 $a0 31 # shiftando a0 31 bits para direita para ter somente o bit de sinal  ( 000x ) 
    beq  $a0, 0, imprimeMais
    bne  $a0, 0, imprimeMenos

    imprimeMenos:
        la $a0, menos
        j fimIf

    imprimeMais:
        la $a0, mais
    
    fimIf:
        syscall

	li $v0, 4  # código do sitema para printar a string
	la $a0, fimLinha #endereço da string a imprimir no registrador $a
	syscall # printando


    # ------------------------------------------------------------------------
    # pegar bits 23-30
    addi  $t0 $zero 255 
    sll  $t0 $t0 23
    and  $a0 $t0 $t8
    srl  $a0 $a0 23
    addi  $t3, $zero, 127
    sub $a0, $a0, $t3
    
    #print exponent
    li $v0, 1
    syscall

	li $v0, 4  # código do sitema para printar a string
	la $a0, fimLinha #endereço da string a imprimir no registrador $a
	syscall # printando

# -------------------------------------------------------------------------

  # pegar bits 0-22
    lw $t2, mascara
    add  $t0, $zero, $t2
    and  $a0, $t0, $t8
    
# -------------------------------------------------------------------------
hex:    
    addi $sp, $sp, -24            # Push register onto stack
    sw $a0, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)

    move $s2, $a0               # Move a0 to s2

    li $s0, 8                   # 8 digits for hex word
    la $s3, hexresult           # Hex string set up here

hexloop:
    rol $s2, $s2, 4             # Start with leftmost digit
    and $s1, $s2, 15            # Mask 15 digits in s2 and place results in s1
    ble $s1, 9, hexprint        # If s1 <= 9, go to print
    add $s1, $s1, 7             # Else s1 = s1 + 7 (to get A-F)

hexprint:
    add $s1, $s1, 48            # Add 48 (30 hex) to get ascii code
    sb $s1,($s3)                # Store byte in result. s3 -> result
    add $s3, $s3, 1             # s3 = s3 + 1
    add $s0, $s0, -1            # s0 = s0 - 1
    bnez $s0, hexloop           # If s0 != 0, go to hexloop
    la $a0, hexresult           # display result


    li $v0, 4
    syscall

    jr $ra                      # Return

# -------------------------------------------------------------------------


	li $v0, 4  # código do sitema para printar a string
	la $a0, fimLinha #endereço da string a imprimir no registrador $a
	syscall # printando

	li $v0, 10 # codigo do sistema para finalizar o programa
	syscall # finalizando