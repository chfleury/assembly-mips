.data
    fimLinha: .asciiz "\n"
	ADD: .asciiz "ADD: "
	SUB: .asciiz "SUB: "
    AND: .asciiz "AND: "
    OR: .asciiz "OR: "
	XOR: .asciiz "XOR: "
	MASK: .asciiz "MASK: "
	SLL: .asciiz "SSL("
	SRL: .asciiz "SRL("
	parenteses: .asciiz "): "

.text

	main:
		li $v0, 5  # c贸digo do sitema para leitura de inteiros
		syscall # lendo o numero
		move $s1, $v0 # movendo o valor para $s1

		li $v0, 5  # c贸digo do sitema para leitura de inteiros
		syscall # lendo o numero
		move $s2, $v0 # movendo o valor para $s2

		li $v0, 5  # c贸digo do sitema para leitura de inteiros
		syscall # lendo o numero
		move $s3, $v0 # movendo o valor para $s3

		jal printarAdd
		jal printarSub
		jal printarAnd
		jal printarOr
		jal printarXor
		j finalizarPrograma

	printarAdd:
		addi $sp, $sp, -4
		sw $ra, 0($sp)

		li $v0, 4
		la $a0, ADD
		syscall

		li $v0, 1
		add $a0, $s1, $s2
		syscall



		jal printarFimLinha

		lw $ra, 0($sp)
		addi $sp, $sp, 4

		jr $ra

	printarSub:
		addi $sp, $sp, -4
		sw $ra, 0($sp)

		li $v0, 4
		la $a0, SUB
		syscall

		li $v0, 1
		sub $a0, $s1, $s2
		syscall

		jal printarFimLinha

		lw $ra, 0($sp)
		addi $sp, $sp, 4

		jr $ra


	printarAnd:
		addi $sp, $sp, -4
		sw $ra, 0($sp)

		li $v0, 4
		la $a0, AND
		syscall

		li $v0, 1
		and $a0, $s1, $s2
		syscall

		jal printarFimLinha

		lw $ra, 0($sp)
		addi $sp, $sp, 4

		jr $ra	
	

	printarOr:
		addi $sp, $sp, -4
		sw $ra, 0($sp)

		li $v0, 4
		la $a0, OR
		syscall

		li $v0, 1
		or $a0, $s1, $s2
		syscall

		jal printarFimLinha

		lw $ra, 0($sp)
		addi $sp, $sp, 4

		jr $ra	


	printarXor:
		addi $sp, $sp, -4
		sw $ra, 0($sp)

		li $v0, 4
		la $a0, XOR
		syscall

		li $v0, 1
		xor $a0, $s1, $s2
		syscall

		jal printarFimLinha

		lw $ra, 0($sp)
		addi $sp, $sp, 4

		jr $ra	

	printarFimLinha:
		li $v0, 4
		la $a0, fimLinha
		syscall

		jr $ra
		
	finalizarPrograma:
		li $v0, 10  # c贸digo do sitema para finalizar programa
		syscall # finalizanddo